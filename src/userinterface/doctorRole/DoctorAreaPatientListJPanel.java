/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.doctorRole;


import java.awt.CardLayout;
import business.EcoSystem;
import business.organisation.DoctorOrganisation;
import javax.swing.JSplitPane;
import business.userAccount.UserAccount;
import business.workQueue.WorkRequest;
import business.enterprise.Enterprise;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PRANJAL
 */
public class DoctorAreaPatientListJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorAreaPatientListJPanel
     */
    
    Enterprise enterprise;
    JPanel userProcessContainer;
    DoctorOrganisation doctorOrganization;
    EcoSystem business;
    JSplitPane jSplitPane2;
    UserAccount userAccount;
    int count = 0;

    DoctorAreaPatientListJPanel(JPanel userProcessContainer, UserAccount userAccount, DoctorOrganisation doctorOrganization, Enterprise enterprise, EcoSystem business, JSplitPane jSplitPane2) {
        this.jSplitPane2 = jSplitPane2;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.doctorOrganization = doctorOrganization;
        this.business = business;
        this.userProcessContainer = userProcessContainer;
        initComponents();
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getListOfWorkRequests()) {
            if ((request.getStatus().equals("Assigned To Doctor")) || (request.getStatus().equals("Treatement Pending")) || (request.getStatus().equals("Treatement Processing"))) {
                Object[] row = new Object[5];
                row[0] = request;
                row[1] = request.getPatientFirstName();
                row[2] = request.getPatientSymptoms();
                row[3] = request.getPatientDisease();
                row[4] = request.getStatus();
                model.addRow(row);
            }

        }
    }

//    DoctorMainWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, DoctorOrganization doctorOrganization, Enterprise enterprise, EcoSystem business) {
//
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblDoctorWorkArea = new javax.swing.JLabel();
        lblEnterprise = new javax.swing.JLabel();
        lblEnterpriseValue = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnAssignToMe = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(254, 254, 254));

        btnBack.setBackground(new java.awt.Color(99, 200, 242));
        btnBack.setFont(new java.awt.Font("Felix Titling", 1, 18)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblDoctorWorkArea.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 36)); // NOI18N
        lblDoctorWorkArea.setText("DOCTOR - WORK AREA ");

        lblEnterprise.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblEnterprise.setText("ENTERPRISE");

        lblEnterpriseValue.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblEnterpriseValue.setText("<value>");

        workRequestJTable.setBackground(new java.awt.Color(99, 200, 242));
        workRequestJTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Type", "Name", "Symptoms", "Diagonsis", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        btnAssignToMe.setBackground(new java.awt.Color(99, 200, 242));
        btnAssignToMe.setFont(new java.awt.Font("Felix Titling", 1, 18)); // NOI18N
        btnAssignToMe.setText("ASSIGN TO ME");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });

        btnProcess.setBackground(new java.awt.Color(99, 200, 242));
        btnProcess.setFont(new java.awt.Font("Felix Titling", 1, 18)); // NOI18N
        btnProcess.setText("PROCESS");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        btnRefresh.setFont(new java.awt.Font("Felix Titling", 1, 18)); // NOI18N
        btnRefresh.setText("REFRESH");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 73, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRefresh)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnBack)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnAssignToMe)
                                            .addGap(391, 391, 391)
                                            .addComponent(btnProcess))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblEnterprise)
                                            .addGap(22, 22, 22)
                                            .addComponent(lblEnterpriseValue, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblDoctorWorkArea, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(181, 181, 181)))
                        .addGap(0, 74, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblDoctorWorkArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEnterpriseValue, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssignToMe)
                    .addComponent(btnProcess))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please make a selection");
            return;
        }
        if (count == 0) {
            WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            count++;
            request.setReceiver(userAccount);
            request.setStatus("Treatement Pending");
            populateTable();
            JOptionPane.showMessageDialog(null, "Patient Assigned");

        } else {
            JOptionPane.showMessageDialog(null, "Soory! Youc annot assign more than one patient");
        }
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please make a selection");
            return;
        }

        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        if (((request.getStatus().equals("Treatement Pending")) || (request.getStatus().equals("Treatement Processing"))) && (request.getReceiver().equals(userAccount))) {
            request.setStatus("Treatement Processing");
            JOptionPane.showMessageDialog(null, "Request processed");
            count = 0;
            DoctorPatientDetailsJPanel processWorkRequestJPanel = new DoctorPatientDetailsJPanel(userProcessContainer, userAccount, request, enterprise, doctorOrganization, jSplitPane2);
//            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
//            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//            layout.next(userProcessContainer);
            jSplitPane2.setRightComponent(processWorkRequestJPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Patient application is processed by another doctor or not assigned yet.");
        }
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDoctorWorkArea;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblEnterpriseValue;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
